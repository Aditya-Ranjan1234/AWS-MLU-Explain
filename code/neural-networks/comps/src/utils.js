const e=e=>e[0].map(((r,t)=>e.map((e=>e[t])))),r=(e,r)=>{const t=[e,r],n=t.map((e=>e[0].length));if(!t.every(((e,r)=>e.every((e=>e.length===n[r])))))throw new Error("All rows in a matrix must have the same number of columns");if(n[0]!==r.length)throw new Error("The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix");return e.map((e=>r[0].map(((t,n)=>e.reduce(((e,t,o)=>e+t*r[o][n]),0)))))},t=(e,r)=>{let t=0,n=0,o=0,a=0,m=0,h=0,l=0,s=e.length;if(s!=r.length)throw new Error("The parameters values_x and values_y need to have same size!");if(0===s)return[[],[]];for(let u=0;u<s;u++)h=e[u],l=r[u],t+=h,n+=l,a+=h*h,o+=h*l,m++;let u=(m*o-t*n)/(m*a-t*t),i=n/m-u*t/m;for(let r=0;r<s;r++)h=e[r],l=h*u+i;return[u,i]};export{t as leastSquares,r as matrixDot,e as transpose};
